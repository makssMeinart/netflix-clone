{"ast":null,"code":"import _slicedToArray from\"/home/makss99/Desktop/react/practice/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{SelectProfileContainer}from\"./profiles\";import{FirebaseContext}from\"../context/firebase\";import{useContext,useEffect,useState}from\"react\";import{Header,Loading,Card,Player}from\"../components\";import{FooterContainer}from\"../containers/footer\";import Fuse from\"fuse.js\";import*as ROUTES from\"../constants/routes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function BrowseContainer(_ref){var slides=_ref.slides;// The switch between series and films\nvar _useState=useState(\"films\"),_useState2=_slicedToArray(_useState,2),category=_useState2[0],setCategory=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchTerm=_useState4[0],setSearchTerm=_useState4[1];// Here we find thje\nvar _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),profile=_useState6[0],setProfile=_useState6[1];// This is to get rid of the loading after its finished\nvar _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),slideRows=_useState10[0],setSlideRows=_useState10[1];var _useContext=useContext(FirebaseContext),firebase=_useContext.firebase;var user=firebase.auth().currentUser||{};// After the profile has been picked we want to remove the loading after 3 seconds\nuseEffect(function(){setTimeout(function(){setLoading(false);},3000);},[profile.displayName]);useEffect(function(){setSlideRows(slides[category]);},[slides,category]);useEffect(function(){var fuse=new Fuse(slideRows,{keys:[\"data.description\",\"data.title\",\"data.genre\"]});var result=fuse.search(searchTerm).map(function(_ref2){var item=_ref2.item;return item;});if(slideRows.length>0&&searchTerm.length>3&&result.length>0){setSlideRows(result);}else{setSlideRows(slides[category]);}},[searchTerm]);return profile.displayName?/*#__PURE__*/_jsxs(_Fragment,{children:[loading?/*#__PURE__*/_jsx(Loading,{src:user.photoURL}):/*#__PURE__*/_jsx(Loading.ReleaseBody,{}),/*#__PURE__*/_jsxs(Header,{src:\"joker1\",backgroundRemoveOnSmallVP:true,children:[/*#__PURE__*/_jsxs(Header.Inner,{children:[/*#__PURE__*/_jsxs(Header.Group,{children:[/*#__PURE__*/_jsx(Header.Logo,{src:\"images/icons/logo.svg\",alt:\"Nerflix\",to:ROUTES.HOME}),/*#__PURE__*/_jsx(Header.TextLink,{active:category===\"films\"?true:false,onClick:function onClick(){return setCategory(\"films\");},children:\"Films\"}),/*#__PURE__*/_jsx(Header.TextLink,{active:category===\"series\"?true:false,onClick:function onClick(){return setCategory(\"series\");},children:\"Series\"})]}),/*#__PURE__*/_jsxs(Header.Group,{children:[/*#__PURE__*/_jsx(Header.Group,{children:/*#__PURE__*/_jsx(Header.Search,{searchTerm:searchTerm,setSearchTerm:setSearchTerm,children:\"Header Search\"})}),/*#__PURE__*/_jsxs(Header.Profile,{children:[/*#__PURE__*/_jsx(Header.Picture,{src:user.photoURL}),/*#__PURE__*/_jsxs(Header.Dropdown,{children:[/*#__PURE__*/_jsxs(Header.Group,{children:[/*#__PURE__*/_jsx(Header.Picture,{src:user.photoURL}),/*#__PURE__*/_jsx(Header.TextLink,{children:user.displayName})]}),/*#__PURE__*/_jsx(Header.Group,{children:/*#__PURE__*/_jsx(Header.TextLink,{onClick:function onClick(){return firebase.auth().signOut();},children:\"Sign Out\"})})]})]})]})]}),/*#__PURE__*/_jsxs(Header.Feature,{children:[/*#__PURE__*/_jsx(Header.FeatureCallOut,{children:\"Watch Joker Now\"}),/*#__PURE__*/_jsx(Header.Text,{children:\"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attemp to feel like he's part of the world around him.\"}),/*#__PURE__*/_jsx(Header.PlayButton,{children:\"Play\"})]})]}),/*#__PURE__*/_jsx(Card.Group,{children:slideRows.map(function(slideItem){return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Title,{children:slideItem.title}),/*#__PURE__*/_jsx(Card.Entities,{children:slideItem.data.map(function(currentSlide){return/*#__PURE__*/_jsxs(Card.Item,{item:currentSlide,children:[/*#__PURE__*/_jsx(Card.Image,{src:\"images/\".concat(category,\"/\").concat(currentSlide.genre,\"/\").concat(currentSlide.slug,\"/small.jpg\")}),/*#__PURE__*/_jsxs(Card.Meta,{children:[/*#__PURE__*/_jsx(Card.SubTitle,{children:currentSlide.title}),/*#__PURE__*/_jsx(Card.Text,{children:currentSlide.description})]})]},currentSlide.docId);})}),/*#__PURE__*/_jsx(Card.Feature,{category:category,children:/*#__PURE__*/_jsxs(Player,{children:[/*#__PURE__*/_jsx(Player.Button,{}),/*#__PURE__*/_jsx(Player.Video,{src:\"videos/bunny.mp4\"})]})})]},\"\".concat(category,\"-\").concat(slideItem.title.toLowerCase()));})}),/*#__PURE__*/_jsx(FooterContainer,{})]}):/*#__PURE__*/_jsx(SelectProfileContainer,{user:user,setProfile:setProfile});}","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js"],"names":["SelectProfileContainer","FirebaseContext","useContext","useEffect","useState","Header","Loading","Card","Player","FooterContainer","Fuse","ROUTES","BrowseContainer","slides","category","setCategory","searchTerm","setSearchTerm","profile","setProfile","loading","setLoading","slideRows","setSlideRows","firebase","user","auth","currentUser","setTimeout","displayName","fuse","keys","result","search","map","item","length","photoURL","HOME","signOut","slideItem","title","data","currentSlide","genre","slug","description","docId","toLowerCase"],"mappings":"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","sourcesContent":["import { SelectProfileContainer } from \"./profiles\"\nimport { FirebaseContext } from \"../context/firebase\"\nimport { useContext, useEffect, useState } from \"react\"\nimport { Header, Loading, Card, Player } from \"../components\"\nimport { FooterContainer } from \"../containers/footer\"\nimport Fuse from \"fuse.js\"\nimport * as ROUTES from \"../constants/routes\"\n\nexport function BrowseContainer({ slides }) {\n  // The switch between series and films\n  const [category, setCategory] = useState(\"films\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  // Here we find thje\n  const [profile, setProfile] = useState({})\n  // This is to get rid of the loading after its finished\n  const [loading, setLoading] = useState(true)\n  const [slideRows, setSlideRows] = useState([])\n\n  const { firebase } = useContext(FirebaseContext)\n  const user = firebase.auth().currentUser || {}\n\n  // After the profile has been picked we want to remove the loading after 3 seconds\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 3000)\n  }, [profile.displayName])\n\n\n  useEffect(() => {\n    setSlideRows(slides[category])\n  }, [slides, category])\n\n  useEffect(() => {\n    const fuse = new Fuse(slideRows, {\n      keys: [\"data.description\", \"data.title\", \"data.genre\"],\n    })\n    const result = fuse.search(searchTerm).map(({ item }) => item)\n\n    if(slideRows.length > 0 && searchTerm.length > 3 && result.length > 0) {\n      setSlideRows(result)\n    }\n    else {\n      setSlideRows(slides[category])\n    }\n  }, [searchTerm])\n\n  return profile.displayName ? (\n    <>\n      {loading ? <Loading src={user.photoURL} /> : <Loading.ReleaseBody />}\n\n      <Header src=\"joker1\" backgroundRemoveOnSmallVP>\n        <Header.Inner>\n          <Header.Group>\n            <Header.Logo\n              src={\"images/icons/logo.svg\"}\n              alt=\"Nerflix\"\n              to={ROUTES.HOME}\n            />\n            <Header.TextLink\n              active={category === \"films\" ? true : false}\n              onClick={() => setCategory(\"films\")}\n            >\n              Films\n            </Header.TextLink>\n            <Header.TextLink\n              active={category === \"series\" ? true : false}\n              onClick={() => setCategory(\"series\")}\n            >\n              Series\n            </Header.TextLink>\n          </Header.Group>\n          <Header.Group>\n            <Header.Group>\n              <Header.Search\n                searchTerm={searchTerm}\n                setSearchTerm={setSearchTerm}\n              >\n                Header Search\n              </Header.Search>\n            </Header.Group>\n            <Header.Profile>\n              <Header.Picture src={user.photoURL} />\n              <Header.Dropdown>\n                <Header.Group>\n                  <Header.Picture src={user.photoURL} />\n                  <Header.TextLink>{user.displayName}</Header.TextLink>\n                </Header.Group>\n                <Header.Group>\n                  <Header.TextLink onClick={() => firebase.auth().signOut()}>\n                    Sign Out\n                  </Header.TextLink>\n                </Header.Group>\n              </Header.Dropdown>\n            </Header.Profile>\n          </Header.Group>\n        </Header.Inner>\n\n        <Header.Feature>\n          <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n          <Header.Text>\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks\n            connection as he walks the streets of Gotham City. Arthur wears two\n            masks -- the one he paints for his day job as a clown, and the guise\n            he projects in a futile attemp to feel like he's part of the world\n            around him.\n          </Header.Text>\n          <Header.PlayButton>Play</Header.PlayButton>\n        </Header.Feature>\n      </Header>\n\n      <Card.Group>\n        {slideRows.map((slideItem) => (\n          <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\n            <Card.Title>{slideItem.title}</Card.Title>\n            <Card.Entities>\n              {slideItem.data.map((currentSlide) => (\n                <Card.Item key={currentSlide.docId} item={currentSlide}>\n                  <Card.Image\n                    src={`images/${category}/${currentSlide.genre}/${currentSlide.slug}/small.jpg`}\n                  />\n\n                  <Card.Meta>\n                    <Card.SubTitle>{currentSlide.title}</Card.SubTitle>\n                    <Card.Text>{currentSlide.description}</Card.Text>\n                  </Card.Meta>\n                </Card.Item>\n              ))}\n            </Card.Entities>\n            {/* The dropdown */}\n            <Card.Feature category={category}>\n              <Player>\n                <Player.Button />\n                <Player.Video src={`videos/bunny.mp4`} />\n              </Player>\n            </Card.Feature>\n          </Card>\n        ))}\n      </Card.Group>\n\n      <FooterContainer />\n    </>\n  ) : (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}