{"ast":null,"code":"import _objectSpread from\"/home/makss99/Desktop/react/practice/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/makss99/Desktop/react/practice/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{Route,Redirect}from\"react-router-dom\";import{BROWSE,SIGN_IN}from\"../constants/routes\";// check if the user is logged in when going on the singin & sign up page if he is not then allow them to go on it else redirect to browse page\nimport{jsx as _jsx}from\"react/jsx-runtime\";export function IsUserRedirect(_ref){var user=_ref.user,loggedInPath=_ref.loggedInPath,children=_ref.children,rest=_objectWithoutProperties(_ref,[\"user\",\"loggedInPath\",\"children\"]);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(){if(!user){return children;}if(user){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:loggedInPath}});}},return:true,null:true}));}// If they not logged in and trying to access the browse page redirect them to the signin page\nexport function ProtectedRoute(_ref2){var user=_ref2.user,children=_ref2.children,rest=_objectWithoutProperties(_ref2,[\"user\",\"children\"]);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(_ref3){var location=_ref3.location;if(user){return children;}if(!user){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:SIGN_IN,state:{from:location}}});}return null;}}));}","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/helpers/routes.js"],"names":["Route","Redirect","BROWSE","SIGN_IN","IsUserRedirect","user","loggedInPath","children","rest","pathname","ProtectedRoute","location","state","from"],"mappings":"qWAAA,OAASA,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,qBAAhC,CAEA;2CACA,MAAO,SAASC,CAAAA,cAAT,MAAmE,IAAzCC,CAAAA,IAAyC,MAAzCA,IAAyC,CAAnCC,YAAmC,MAAnCA,YAAmC,CAArBC,QAAqB,MAArBA,QAAqB,CAARC,IAAQ,mEACxE,mBACE,KAAC,KAAD,gCACMA,IADN,MAEE,MAAM,CAAE,iBAAM,CACZ,GAAI,CAACH,IAAL,CAAW,CACT,MAAOE,CAAAA,QAAP,CACD,CAED,GAAIF,IAAJ,CAAU,CACR,mBACE,KAAC,QAAD,EACE,EAAE,CAAE,CACFI,QAAQ,CAAEH,YADR,CADN,EADF,CAOD,CACF,CAhBH,CAiBE,MAAM,KAjBR,CAkBE,IAAI,KAlBN,GADF,CAsBD,CAED;AACA,MAAO,SAASI,CAAAA,cAAT,OAAqD,IAA3BL,CAAAA,IAA2B,OAA3BA,IAA2B,CAArBE,QAAqB,OAArBA,QAAqB,CAARC,IAAQ,qDAC1D,mBACE,KAAC,KAAD,gCACMA,IADN,MAEE,MAAM,CAAE,sBAAkB,IAAfG,CAAAA,QAAe,OAAfA,QAAe,CACxB,GAAIN,IAAJ,CAAU,CACR,MAAOE,CAAAA,QAAP,CACD,CAED,GAAI,CAACF,IAAL,CAAW,CACT,mBACE,KAAC,QAAD,EACE,EAAE,CAAE,CACFI,QAAQ,CAAEN,OADR,CAEFS,KAAK,CAAE,CAAEC,IAAI,CAAEF,QAAR,CAFL,CADN,EADF,CAQD,CACD,MAAO,KAAP,CACD,CAlBH,GADF,CAsBD","sourcesContent":["import { Route, Redirect } from \"react-router-dom\"\nimport { BROWSE, SIGN_IN } from \"../constants/routes\"\n\n// check if the user is logged in when going on the singin & sign up page if he is not then allow them to go on it else redirect to browse page\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (!user) {\n          return children\n        }\n\n        if (user) {\n          return (\n            <Redirect\n              to={{\n                pathname: loggedInPath,\n              }}\n            />\n          )\n        }\n      }}\n      return\n      null\n    />\n  )\n}\n\n// If they not logged in and trying to access the browse page redirect them to the signin page\nexport function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (user) {\n          return children\n        }\n\n        if (!user) {\n          return (\n            <Redirect\n              to={{\n                pathname: SIGN_IN,\n                state: { from: location },\n              }}\n            />\n          )\n        }\n        return null\n      }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}