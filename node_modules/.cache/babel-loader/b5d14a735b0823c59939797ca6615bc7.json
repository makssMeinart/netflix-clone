{"ast":null,"code":"var _jsxFileName = \"/home/makss99/Desktop/react/practice/netflix-clone/src/components/opt-form/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { Inner, Title, Wrapper, InputInner, Input, Label, WarningInner, Warning, Button, InputWrapper } from \"./styles/opt-form\"; // This is to get the value of input lengh to the Label\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function OptForm({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Inner, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n_c = OptForm;\n\nOptForm.Title = function OptFormTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\nOptForm.Wrapper = function OptFormWrapper({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Wrapper, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\nOptForm.InputWrapper = _s(function OptFormInputWrapper({\n  children,\n  ...restProps\n}) {\n  _s();\n\n  // Set the useState to count input.value.length\n  const [valueCount, setValueCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: {\n      valueCount,\n      setValueCount\n    },\n    children: /*#__PURE__*/_jsxDEV(InputWrapper, { ...restProps,\n      children: [\" \", children, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}, \"2y2GPhJ5c4f3OrQB5h+bUgvhyno=\");\n\nOptForm.InputInner = function OptFormInputInner({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(InputInner, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\nOptForm.Input = _s2(function OptFormInput({ ...restProps\n}) {\n  _s2();\n\n  const {\n    setValueCount\n  } = useContext(ToggleContext); // On change of an input putting the length in useState\n\n  return /*#__PURE__*/_jsxDEV(Input, {\n    onChange: e => setValueCount(e.target.value),\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}, \"LyIOpFoMFAc9fmXUGb0uDebxTpA=\");\nOptForm.Label = _s3(function OptFormLabel({\n  children,\n  ...restProps\n}) {\n  _s3();\n\n  // Getting the value.length\n  const {\n    valueCount\n  } = useContext(ToggleContext);\n  const label_active = {\n    color: \"gray\",\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    top: \"25%\"\n  }; // Gonna check if the value of the count is > 0 we wanna keep the label at the top\n  // So when you click of it it dosen't drop back on your text\n\n  return /*#__PURE__*/_jsxDEV(Label, {\n    style: valueCount.length > 0 ? label_active : null,\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}, \"4cJUn5zEdjVnNZspGaArOJNOSOE=\");\n\nOptForm.WarningInner = function OptFormWarningInner({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(WarningInner, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n\nOptForm.Warning = _s4(function OptFormWarning({\n  children,\n  ...restProps\n}) {\n  _s4();\n\n  // Here we need to check if the email is typed in and if its correct form and shape\n  const {\n    valueCount\n  } = useContext(ToggleContext);\n  console.log(valueCount);\n  const re = \"/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\";\n  return /*#__PURE__*/_jsxDEV(Warning, { ...restProps,\n    children: [valueCount.length < 5 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 30\n    }, this) : null, valueCount.length >= 5 && re.test(String(valueCount).toLowerCase())]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n}, \"W7MfP4M8SO2q9nqXM8j7+rri7Dk=\");\n\nOptForm.Button = function OptFormButton({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Button, { ...restProps,\n    children: [children, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/chevron-right.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OptForm\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/components/opt-form/index.js"],"names":["createContext","useContext","useState","Inner","Title","Wrapper","InputInner","Input","Label","WarningInner","Warning","Button","InputWrapper","ToggleContext","OptForm","children","restProps","OptFormTitle","OptFormWrapper","OptFormInputWrapper","valueCount","setValueCount","OptFormInputInner","OptFormInput","e","target","value","OptFormLabel","label_active","color","fontWeight","fontSize","top","length","OptFormWarningInner","OptFormWarning","console","log","re","test","String","toLowerCase","OptFormButton"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from \"react\"\n\nimport {\n  Inner,\n  Title,\n  Wrapper,\n  InputInner,\n  Input,\n  Label,\n  WarningInner,\n  Warning,\n  Button,\n  InputWrapper,\n} from \"./styles/opt-form\"\n\n// This is to get the value of input lengh to the Label\nconst ToggleContext = createContext()\n\nexport default function OptForm({ children, ...restProps }) {\n  return <Inner>{children}</Inner>\n}\n\nOptForm.Title = function OptFormTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>\n}\n\nOptForm.Wrapper = function OptFormWrapper({ children, ...restProps }) {\n  return <Wrapper {...restProps}>{children}</Wrapper>\n}\n\nOptForm.InputWrapper = function OptFormInputWrapper({\n  children,\n  ...restProps\n}) {\n  // Set the useState to count input.value.length\n  const [valueCount, setValueCount] = useState(0)\n\n  return (\n    <ToggleContext.Provider value={{ valueCount, setValueCount }}>\n      <InputWrapper {...restProps}> {children} </InputWrapper>\n    </ToggleContext.Provider>\n  )\n}\n\nOptForm.InputInner = function OptFormInputInner({children, ...restProps}) {\n  return <InputInner {...restProps} >{children}</InputInner>\n}\n\nOptForm.Input = function OptFormInput({ ...restProps }) {\n  const { setValueCount } = useContext(ToggleContext)\n\n  // On change of an input putting the length in useState\n  return (\n    <Input onChange={(e) => setValueCount(e.target.value)} {...restProps} />\n  )\n}\n\nOptForm.Label = function OptFormLabel({ children, ...restProps }) {\n  // Getting the value.length\n  const { valueCount } = useContext(ToggleContext)\n\n  const label_active = {\n    color: \"gray\",\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    top: \"25%\",\n  }\n\n  // Gonna check if the value of the count is > 0 we wanna keep the label at the top\n  // So when you click of it it dosen't drop back on your text\n  return (\n    <Label style={valueCount.length > 0 ? label_active : null} {...restProps}>\n      {children}\n    </Label>\n  )\n}\n\nOptForm.WarningInner = function OptFormWarningInner({children, ...restProps}) {\n  return <WarningInner {...restProps} >{children}</WarningInner>\n}\n\nOptForm.Warning = function OptFormWarning({ children, ...restProps }) {\n  // Here we need to check if the email is typed in and if its correct form and shape\n  const {valueCount} = useContext(ToggleContext)\n\n  console.log(valueCount)\n  const re = \"/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\";\n\n  return <Warning {...restProps}>\n    {valueCount.length < 5 ? <p>Email is required!</p> : null}\n    {valueCount.length >= 5 && re.test(String(valueCount).toLowerCase())}\n  </Warning>\n}\n\nOptForm.Button = function OptFormButton({ children, ...restProps }) {\n  return (\n    <Button {...restProps}>\n      {children} <img src=\"/images/icons/chevron-right.png\" />\n    </Button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}