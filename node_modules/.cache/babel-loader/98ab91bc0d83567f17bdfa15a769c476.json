{"ast":null,"code":"var _jsxFileName = \"/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nconst ToggleContext = /*#__PURE__*/createContext();\nimport { Container, Inner, Header, Frame, Item, Top, Title, Dropdown, Text } from \"./styles/accordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Accordion;\n\nAccordion.Header = function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Header, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Frame = function AccordionFrame({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Frame, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Item = _s(function AccordionItem({\n  children,\n  ...restProps\n}) {\n  _s();\n\n  // useState will be responsible for dropdown and button icon change, But we need to open it and close it only\n  // When we click on the Top part not the dropdown, So we gotta pass the useState to the Top\n  const [toggleShow, setToggleShow] = useState(false);\n  const value = [toggleShow, setToggleShow];\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(Item, { ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\n\nAccordion.Top = function AccordionTop({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Top, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Dropdown = function AccordionDropdown({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Dropdown, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Body = function AccordionBody({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Body, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/index.js"],"names":["createContext","useContext","useState","ToggleContext","Container","Inner","Header","Frame","Item","Top","Title","Dropdown","Text","Accordion","children","restProps","AccordionHeader","AccordionFrame","AccordionItem","toggleShow","setToggleShow","value","AccordionTop","AccordionTitle","AccordionDropdown","Body","AccordionBody"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEA,SACEI,SADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,GANF,EAOEC,KAPF,EAQEC,QARF,EASEC,IATF,QAUO,oBAVP;;AAYA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAnB,EAA+C;AAC5D,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,KAAD;AAAA,gBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBD,S;;AAQxBA,SAAS,CAACP,MAAV,GAAmB,SAASU,eAAT,CAAyB;AAAEF,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAzB,EAAqD;AACtE,sBAAO,QAAC,MAAD,OAAYA,SAAZ;AAAA,cAAwBD;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACN,KAAV,GAAkB,SAASU,cAAT,CAAwB;AAAEH,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AACpE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACL,IAAV,MAAiB,SAASU,aAAT,CAAuB;AAAEJ,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAAA;;AAClE;AACA;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMmB,KAAK,GAAG,CACZF,UADY,EAEZC,aAFY,CAAd;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC,KAA/B;AAAA,2BACE,QAAC,IAAD,OAAUN,SAAV;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;AAiBAD,SAAS,CAACJ,GAAV,GAAgB,SAASa,YAAT,CAAsB;AAAER,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAAkD;AAChE,sBAAO,QAAC,GAAD,OAASA,SAAT;AAAA,cAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACH,KAAV,GAAkB,SAASa,cAAT,CAAwB;AAAET,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AACpE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACF,QAAV,GAAqB,SAASa,iBAAT,CAA2B;AAAEV,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAA3B,EAAuD;AAC1E,sBAAO,QAAC,QAAD,OAAcA,SAAd;AAAA,cAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACY,IAAV,GAAiB,SAASC,aAAT,CAAuB;AAAEZ,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAClE,sBAAO,QAAC,IAAD,OAAUA,SAAV;AAAA,cAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD","sourcesContent":["import { createContext, useContext, useState } from \"react\"\n\nconst ToggleContext = createContext()\n\nimport {\n  Container,\n  Inner,\n  Header,\n  Frame,\n  Item,\n  Top,\n  Title,\n  Dropdown,\n  Text,\n} from \"./styles/accordion\"\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container>\n      <Inner>{children}</Inner>\n    </Container>\n  )\n}\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  return <Header {...restProps}>{children}</Header>\n}\n\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>\n}\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  // useState will be responsible for dropdown and button icon change, But we need to open it and close it only\n  // When we click on the Top part not the dropdown, So we gotta pass the useState to the Top\n  const [toggleShow, setToggleShow] = useState(false)\n\n  const value = [\n    toggleShow,\n    setToggleShow\n  ]\n\n  return (\n    <ToggleContext.Provider value={value}>\n      <Item {...restProps}>{children}</Item>\n    </ToggleContext.Provider>\n  )\n}\n\nAccordion.Top = function AccordionTop({ children, ...restProps }) {\n  return <Top {...restProps}>{children}</Top>\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>\n}\n\nAccordion.Dropdown = function AccordionDropdown({ children, ...restProps }) {\n  return <Dropdown {...restProps}>{children}</Dropdown>\n}\n\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\n  return <Body {...restProps}>{children}</Body>\n}\n"]},"metadata":{},"sourceType":"module"}