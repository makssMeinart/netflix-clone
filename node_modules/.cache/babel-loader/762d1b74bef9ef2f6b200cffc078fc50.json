{"ast":null,"code":"var _jsxFileName = \"/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { Container, Inner, Header, Frame, Item, Top, Title, Dropdown, Text } from \"./styles/accordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Accordion;\nconst ToggleContext = /*#__PURE__*/createContext();\n\nAccordion.Header = function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Header, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Frame = function AccordionFrame({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Frame, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Item = _s(function AccordionItem({\n  children,\n  ...restProps\n}) {\n  _s();\n\n  // useState will be responsible for dropdown and button icon change, But we need to open it and close it only\n  // When we click on the Top part not the dropdown, So we gotta pass the useState to the Top\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: (toggleShow, setToggleShow),\n    children: /*#__PURE__*/_jsxDEV(Item, { ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\nAccordion.Top = _s2(function AccordionTop({\n  children,\n  ...restProps\n}) {\n  _s2();\n\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/_jsxDEV(Top, {\n    onClick: () => setToggleShow(!toggleShow),\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}, \"3QqNJHWJ9UnMC6yBs8uK0PoPAV0=\");\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Dropdown = function AccordionDropdown({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Dropdown, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\nAccordion.Text = function AccordionText({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Text, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/index.js"],"names":["createContext","useContext","useState","Container","Inner","Header","Frame","Item","Top","Title","Dropdown","Text","Accordion","children","restProps","ToggleContext","AccordionHeader","AccordionFrame","AccordionItem","toggleShow","setToggleShow","AccordionTop","AccordionTitle","AccordionDropdown","AccordionText"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,GANF,EAOEC,KAPF,EAQEC,QARF,EASEC,IATF,QAUO,oBAVP;;AAYA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAnB,EAA+C;AAC5D,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,KAAD;AAAA,gBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBD,S;AAQxB,MAAMG,aAAa,gBAAGf,aAAa,EAAnC;;AAEAY,SAAS,CAACP,MAAV,GAAmB,SAASW,eAAT,CAAyB;AAAEH,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAzB,EAAqD;AACtE,sBAAO,QAAC,MAAD,OAAYA,SAAZ;AAAA,cAAwBD;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACN,KAAV,GAAkB,SAASW,cAAT,CAAwB;AAAEJ,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AACpE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACL,IAAV,MAAiB,SAASW,aAAT,CAAuB;AAAEL,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAAA;;AAClE;AACA;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,GAAGiB,UAAU,EAACC,aAAd,CAA7B;AAAA,2BACE,QAAC,IAAD,OAAUN,SAAV;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;AAYAD,SAAS,CAACJ,GAAV,OAAgB,SAASa,YAAT,CAAsB;AAAER,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAAkD;AAAA;;AAChE,QAAM;AAACK,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA8BnB,UAAU,CAACc,aAAD,CAA9C;AAEA,sBAAO,QAAC,GAAD;AAAK,IAAA,OAAO,EAAE,MAAMK,aAAa,CAAC,CAACD,UAAF,CAAjC;AAAA,OAAoDL,SAApD;AAAA,cAAgED;AAAhE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;AAMAD,SAAS,CAACH,KAAV,GAAkB,SAASa,cAAT,CAAwB;AAAET,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAoD;AACpE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACF,QAAV,GAAqB,SAASa,iBAAT,CAA2B;AAAEV,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAA3B,EAAuD;AAC1E,sBAAO,QAAC,QAAD,OAAcA,SAAd;AAAA,cAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,SAAS,CAACD,IAAV,GAAiB,SAASa,aAAT,CAAuB;AAAEX,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAmD;AAClE,sBAAO,QAAC,IAAD,OAAUA,SAAV;AAAA,cAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD","sourcesContent":["import { createContext, useContext, useState } from \"react\"\nimport {\n  Container,\n  Inner,\n  Header,\n  Frame,\n  Item,\n  Top,\n  Title,\n  Dropdown,\n  Text,\n} from \"./styles/accordion\"\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container>\n      <Inner>{children}</Inner>\n    </Container>\n  )\n}\n\nconst ToggleContext = createContext()\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  return <Header {...restProps}>{children}</Header>\n}\n\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>\n}\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  // useState will be responsible for dropdown and button icon change, But we need to open it and close it only\n  // When we click on the Top part not the dropdown, So we gotta pass the useState to the Top\n  const [toggleShow, setToggleShow] = useState(false)\n\n  return (\n    <ToggleContext.Provider value={(toggleShow,setToggleShow)}>\n      <Item {...restProps}>{children}</Item>\n    </ToggleContext.Provider>\n  )\n}\n\nAccordion.Top = function AccordionTop({ children, ...restProps }) {\n  const {toggleShow, setToggleShow} = useContext(ToggleContext)\n\n  return <Top onClick={() => setToggleShow(!toggleShow)} {...restProps}>{children}</Top>\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>\n}\n\nAccordion.Dropdown = function AccordionDropdown({ children, ...restProps }) {\n  return <Dropdown {...restProps}>{children}</Dropdown>\n}\n\nAccordion.Text = function AccordionText({ children, ...restProps }) {\n  return <Text {...restProps}>{children}</Text>\n}\n"]},"metadata":{},"sourceType":"module"}