{"ast":null,"code":"var _jsxFileName = \"/home/makss99/Desktop/react/practice/netflix-clone/src/components/card/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, createContext } from \"react\";\nimport { Container, Title, SubTitle } from \"./styles/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FeatureContext = /*#__PURE__*/createContext();\nexport default function Card({\n  children,\n  ...restProps\n}) {\n  _s();\n\n  const [showFeature, setShowFeature] = useState(false);\n  const [itemFeature, setItemFeature] = useState({});\n  return /*#__PURE__*/_jsxDEV(FeatureContext.Provider, {\n    // Passing down all info about dropdown info through the context\n    value: {\n      showFeature,\n      setShowFeature,\n      itemFeature,\n      setItemFeature\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, { ...restProps,\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"awaBayuRKBYs49l4R/VgP/RRQrQ=\");\n\n_c = Card;\n\nCard.Group = function CardGroup({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Group, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\nCard.Title = function CardTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\nCard.SubTitle = function CardSubTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(SubTitle, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/components/card/index.js"],"names":["useState","useContext","createContext","Container","Title","SubTitle","FeatureContext","Card","children","restProps","showFeature","setShowFeature","itemFeature","setItemFeature","Group","CardGroup","CardTitle","CardSubTitle"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,aAA/B,QAAoD,OAApD;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,QAHF,QAKO,eALP;;AAOA,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;AAEP,eAAe,SAASK,IAAT,CAAc;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAd,EAA0C;AAAA;;AACvD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACA;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,WAAF;AAAeC,MAAAA,cAAf;AAA+BC,MAAAA,WAA/B;AAA4CC,MAAAA;AAA5C,KAFT;AAAA,2BAIE,QAAC,SAAD,OAAeJ,SAAf;AAAA,sBAA4BD,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAZuBD,I;;KAAAA,I;;AAcxBA,IAAI,CAACO,KAAL,GAAa,SAASC,SAAT,CAAmB;AAACP,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAnB,EAA6C;AACxD,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAwBD;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,IAAI,CAACH,KAAL,GAAa,SAASY,SAAT,CAAmB;AAACR,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAnB,EAA6C;AACxD,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAwBD;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIAD,IAAI,CAACF,QAAL,GAAgB,SAASY,YAAT,CAAsB;AAACT,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAtB,EAAgD;AAC9D,sBAAO,QAAC,QAAD,OAAcA,SAAd;AAAA,cAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD","sourcesContent":["import { useState, useContext, createContext } from \"react\"\nimport {\n  Container,\n  Title,\n  SubTitle,\n  \n} from \"./styles/card\"\n\nexport const FeatureContext = createContext()\n\nexport default function Card({ children, ...restProps }) {\n  const [showFeature, setShowFeature] = useState(false)\n  const [itemFeature, setItemFeature] = useState({})\n\n  return (\n    <FeatureContext.Provider\n    // Passing down all info about dropdown info through the context\n      value={{ showFeature, setShowFeature, itemFeature, setItemFeature }}\n    >\n      <Container {...restProps}> {children}</Container>\n    </FeatureContext.Provider>\n  )\n}\n \nCard.Group = function CardGroup({children, ...restProps}) {\n  return <Group {...restProps} >{children}</Group>\n}\n\nCard.Title = function CardTitle({children, ...restProps}) {\n  return <Title {...restProps} >{children}</Title>\n}\n\nCard.SubTitle = function CardSubTitle({children, ...restProps}) {\n  return <SubTitle {...restProps} >{children}</SubTitle>\n}\n"]},"metadata":{},"sourceType":"module"}