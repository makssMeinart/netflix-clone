{"ast":null,"code":"var _jsxFileName = \"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js\",\n    _s = $RefreshSig$();\n\nimport { SelectProfileContainer } from \"./profiles\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Loading } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BrowseContainer({\n  slides\n}) {\n  _s();\n\n  // Here we find thje \n  const [profile, setProfile] = useState({}); // This is to get rid of the loading after its finished \n\n  const [loading, setLoading] = useState(true);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  useEffect(() => {\n    console.log(`profile`, profile);\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  return profile.displayName ? loading ? /*#__PURE__*/_jsxDEV(Loading, {\n    src: user.photoURL\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 16\n  }, this) : null : /*#__PURE__*/_jsxDEV(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowseContainer, \"EG5Q2Ud/mJ7z7uEB4RFjmWLwAes=\");\n\n_c = BrowseContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js"],"names":["SelectProfileContainer","FirebaseContext","useContext","useEffect","useState","Loading","BrowseContainer","slides","profile","setProfile","loading","setLoading","firebase","user","auth","currentUser","console","log","setTimeout","displayName","photoURL"],"mappings":";;;AAAA,SAASA,sBAAT,QAAuC,YAAvC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,OAAO,SAASC,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAmC;AAAA;;AACxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC,CAFwC,CAGxC;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeV,UAAU,CAACD,eAAD,CAA/B;AACA,QAAMY,IAAI,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,WAAhB,IAA+B,EAA5C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAuBT,OAAvB;AACAU,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALQ,EAKN,CAACH,OAAO,CAACW,WAAT,CALM,CAAT;AAOA,SAAOX,OAAO,CAACW,WAAR,GACJT,OAAO,gBAAG,QAAC,OAAD;AAAS,IAAA,GAAG,EAAEG,IAAI,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAH,GAAqC,IADxC,gBAKL,QAAC,sBAAD;AAAwB,IAAA,IAAI,EAAEP,IAA9B;AAAoC,IAAA,UAAU,EAAEJ;AAAhD;AAAA;AAAA;AAAA;AAAA,UALF;AAOD;;GAtBeH,e;;KAAAA,e","sourcesContent":["import { SelectProfileContainer } from \"./profiles\";\nimport { FirebaseContext } from \"../context/firebase\"\nimport { useContext, useEffect, useState } from \"react\";\nimport { Loading } from \"../components\"\n\nexport function BrowseContainer({slides}) {\n  // Here we find thje \n  const [profile, setProfile] = useState({})\n  // This is to get rid of the loading after its finished \n  const [loading, setLoading] = useState(true)\n  const { firebase } = useContext(FirebaseContext)\n  const user = firebase.auth().currentUser || {} \n\n  useEffect(() => {\n    console.log(`profile`, profile)\n    setTimeout(() => {\n      setLoading(false)\n    }, 3000)\n  }, [profile.displayName])\n\n  return profile.displayName ? (\n    (loading ? <Loading src={user.photoURL} /> : null)\n  )\n  :\n  (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  )\n}"]},"metadata":{},"sourceType":"module"}