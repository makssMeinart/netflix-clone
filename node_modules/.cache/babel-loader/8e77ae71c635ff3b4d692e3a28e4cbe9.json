{"ast":null,"code":"var _jsxFileName = \"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js\",\n    _s = $RefreshSig$();\n\nimport { SelectProfileContainer } from \"./profiles\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Header, Loading } from \"../components\";\nimport * as ROUTES from \"../constants/routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BrowseContainer({\n  slides\n}) {\n  _s();\n\n  // The switch between series and films\n  const [category, setCategory] = useState(\"series\");\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Here we find thje\n\n  const [profile, setProfile] = useState({}); // This is to get rid of the loading after its finished\n\n  const [loading, setLoading] = useState(true);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  return profile.displayName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {\n      src: user.photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Loading.ReleaseBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      src: \"joker1\",\n      backgroundRemoveOnSmallVP: true,\n      children: [/*#__PURE__*/_jsxDEV(Header.Inner, {\n        children: [/*#__PURE__*/_jsxDEV(Header.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Header.Logo, {\n            src: \"/images/icons/logo.svg\",\n            alt: \"Nerflix\",\n            to: ROUTES.HOME\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n            children: \"Films\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n            children: \"Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Header.Group, {\n            children: /*#__PURE__*/_jsxDEV(Header.Search, {\n              searchTerm: searchTerm,\n              setSearchTerm: setSearchTerm,\n              children: \"Header Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header.Profile, {\n            children: [/*#__PURE__*/_jsxDEV(Header.Picture, {\n              src: user.photoURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Header.Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Header.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Header.Picture, {\n                  src: user.photoURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n                  children: user.displayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Header.Group, {\n                children: /*#__PURE__*/_jsxDEV(Header.TextLink, {\n                  onClick: () => firebase.auth().signOut(),\n                  children: \"Sign Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Feature, {\n        children: [/*#__PURE__*/_jsxDEV(Header.FeatureCallOut, {\n          children: \"Watch Joker Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.Text, {\n          children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attemp to feel like he's part of the world around him.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.PlayButton, {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowseContainer, \"TSr2U/roEd7ZkF1p4nbAsJNuGX0=\");\n\n_c = BrowseContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js"],"names":["SelectProfileContainer","FirebaseContext","useContext","useEffect","useState","Header","Loading","ROUTES","BrowseContainer","slides","category","setCategory","searchTerm","setSearchTerm","profile","setProfile","loading","setLoading","firebase","user","auth","currentUser","setTimeout","displayName","photoURL","HOME","signOut"],"mappings":"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","sourcesContent":["import { SelectProfileContainer } from \"./profiles\"\nimport { FirebaseContext } from \"../context/firebase\"\nimport { useContext, useEffect, useState } from \"react\"\nimport { Header, Loading } from \"../components\"\nimport * as ROUTES from \"../constants/routes\"\n\nexport function BrowseContainer({ slides }) {\n  // The switch between series and films\n  const [category, setCategory] = useState(\"series\")\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  // Here we find thje\n  const [profile, setProfile] = useState({})\n  // This is to get rid of the loading after its finished\n  const [loading, setLoading] = useState(true)\n  const { firebase } = useContext(FirebaseContext)\n  const user = firebase.auth().currentUser || {}\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 3000)\n  }, [profile.displayName])\n\n  return profile.displayName ? (\n    <>\n      {loading ? <Loading src={user.photoURL} /> : <Loading.ReleaseBody />}\n\n      <Header src=\"joker1\" backgroundRemoveOnSmallVP>\n        <Header.Inner>\n          <Header.Group>\n            <Header.Logo\n              src={\"/images/icons/logo.svg\"}\n              alt=\"Nerflix\"\n              to={ROUTES.HOME}\n            />\n            <Header.TextLink>Films</Header.TextLink>\n            <Header.TextLink>Series</Header.TextLink>\n          </Header.Group>\n          <Header.Group>\n            <Header.Group>\n              <Header.Search\n                searchTerm={searchTerm}\n                setSearchTerm={setSearchTerm}\n              >\n                Header Search\n              </Header.Search>\n            </Header.Group>\n            <Header.Profile>\n              <Header.Picture src={user.photoURL} />\n              <Header.Dropdown>\n                <Header.Group>\n                  <Header.Picture src={user.photoURL} />\n                  <Header.TextLink>{user.displayName}</Header.TextLink>\n                </Header.Group>\n                <Header.Group>\n                  <Header.TextLink onClick={() => firebase.auth().signOut()}>\n                    Sign Out\n                  </Header.TextLink>\n                </Header.Group>\n              </Header.Dropdown>\n            </Header.Profile>\n          </Header.Group>\n        </Header.Inner>\n\n        <Header.Feature>\n          <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n          <Header.Text>\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks\n            connection as he walks the streets of Gotham City. Arthur wears two\n            masks -- the one he paints for his day job as a clown, and the guise\n            he projects in a futile attemp to feel like he's part of the world\n            around him.\n          </Header.Text>\n          <Header.PlayButton>Play</Header.PlayButton>\n        </Header.Feature>\n      </Header>\n\n       \n    </>\n  ) : (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}