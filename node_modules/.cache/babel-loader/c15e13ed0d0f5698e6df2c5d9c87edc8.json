{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContex, useContext } from \"react\";\nimport { FirebaseContext } from \"../context/firebase\";\nexport default function useAuthListener() {\n  _s();\n\n  // userState should pull up the authUser from localStorage\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"authUser\")));\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(authUser => {\n      if (authUser) {\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem(\"authUser\");\n        setUser(null);\n      }\n    }); // clean the listener\n\n    return () => listener();\n  }, []);\n  return {\n    user\n  };\n}\n\n_s(useAuthListener, \"QbeyeTuXls5DL/c+0Dx9k4nXk5Y=\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContex","useContext","FirebaseContext","useAuthListener","user","setUser","JSON","parse","localStorage","getItem","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,EAAyCC,UAAzC,QAA0D,OAA1D;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAhC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACC,eAAD,CAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GACZD,QAAQ,CACPE,IADD,GAECC,kBAFD,CAEoBC,QAAQ,IAAI;AAC9B,UAAGA,QAAH,EAAa;AACXN,QAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAeF,QAAf,CAAjC;AACAT,QAAAA,OAAO,CAACS,QAAD,CAAP;AACD,OAHD,MAIK;AACHN,QAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAZ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAXD,CADF,CADc,CAeZ;;AACA,WAAO,MAAMM,QAAQ,EAArB;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACD;;GA1BuBD,e","sourcesContent":["import { useState, useEffect, useContex, useContext} from \"react\"\nimport { FirebaseContext } from \"../context/firebase\"\n\nexport default function useAuthListener() {\n  // userState should pull up the authUser from localStorage\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"authUser\")))\n\n  const { firebase } = useContext(FirebaseContext) \n\n  useEffect(() => {\n    const listener = \n      firebase\n      .auth()\n      .onAuthStateChanged(authUser => {\n        if(authUser) {\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser))\n          setUser(authUser)\n        }\n        else {\n          localStorage.removeItem(\"authUser\")\n          setUser(null)\n        }\n      })\n\n      // clean the listener\n      return () => listener()\n  }, [])\n\n  return { user }\n}"]},"metadata":{},"sourceType":"module"}