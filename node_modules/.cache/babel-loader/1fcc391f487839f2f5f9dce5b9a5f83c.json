{"ast":null,"code":"var _jsxFileName = \"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js\",\n    _s = $RefreshSig$();\n\nimport { SelectProfileContainer } from \"./profiles\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Header, Loading } from \"../components\";\nimport * as ROUTES from \"../constants/routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BrowseContainer({\n  slides\n}) {\n  _s();\n\n  // Here we find thje\n  const [profile, setProfile] = useState({}); // This is to get rid of the loading after its finished\n\n  const [loading, setLoading] = useState(true);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  const [topic, setTopic] = useState(\"\");\n  console.log(slides);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  return profile.displayName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {\n      src: user.photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Loading.ReleaseBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      src: \"joker1\",\n      children: [/*#__PURE__*/_jsxDEV(Header.Inner, {\n        children: [/*#__PURE__*/_jsxDEV(Header.Logo, {\n          src: \"/images/icons/logo.svg\",\n          alt: \"Nerflix\",\n          to: ROUTES.HOME\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n          children: \"Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n          children: \"Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Feature, {\n        children: [/*#__PURE__*/_jsxDEV(Header.FeatureCallOut, {\n          children: \"Watch Joker Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.Text, {\n          children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attemp to feel like he's part of the world around him.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Slides are going here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowseContainer, \"49fV71iyg4wo243zwnyD29vBZLM=\");\n\n_c = BrowseContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"sources":["/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js"],"names":["SelectProfileContainer","FirebaseContext","useContext","useEffect","useState","Header","Loading","ROUTES","BrowseContainer","slides","profile","setProfile","loading","setLoading","firebase","user","auth","currentUser","topic","setTopic","console","log","setTimeout","displayName","photoURL","HOME"],"mappings":";;;AAAA,SAASA,sBAAT,QAAuC,YAAvC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,eAAhC;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;;AAEA,OAAO,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAqC;AAAA;;AAC1C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAF0C,CAG1C;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeZ,UAAU,CAACD,eAAD,CAA/B;AACA,QAAMc,IAAI,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,WAAhB,IAA+B,EAA5C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AAGAN,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU,CAAC,MAAM;AACfT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,CAACH,OAAO,CAACa,WAAT,CAJM,CAAT;AAMA,SAAOb,OAAO,CAACa,WAAR,gBACL;AAAA,eACGX,OAAO,gBAAG,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEG,IAAI,CAACS;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAqC,QAAC,OAAD,CAAS,WAAT;AAAA;AAAA;AAAA;AAAA,YAD/C,eAGE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAA,8BACE,QAAC,MAAD,CAAQ,KAAR;AAAA,gCACE,QAAC,MAAD,CAAQ,IAAR;AACE,UAAA,GAAG,EAAE,wBADP;AAEE,UAAA,GAAG,EAAC,SAFN;AAGE,UAAA,EAAE,EAAEjB,MAAM,CAACkB;AAHb;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD,CAAQ,OAAR;AAAA,gCACE,QAAC,MAAD,CAAQ,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA,kBADK,gBA6BL,QAAC,sBAAD;AAAwB,IAAA,IAAI,EAAEV,IAA9B;AAAoC,IAAA,UAAU,EAAEJ;AAAhD;AAAA;AAAA;AAAA;AAAA,UA7BF;AA+BD;;GAjDeH,e;;KAAAA,e","sourcesContent":["import { SelectProfileContainer } from \"./profiles\"\nimport { FirebaseContext } from \"../context/firebase\"\nimport { useContext, useEffect, useState } from \"react\"\nimport { Header, Loading } from \"../components\"\nimport * as ROUTES from \"../constants/routes\"\n\nexport function BrowseContainer({ slides }) {\n  // Here we find thje\n  const [profile, setProfile] = useState({})\n  // This is to get rid of the loading after its finished\n  const [loading, setLoading] = useState(true)\n  const { firebase } = useContext(FirebaseContext)\n  const user = firebase.auth().currentUser || {}\n  const [topic, setTopic] = useState(\"\")\n\n  console.log(slides)\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 3000)\n  }, [profile.displayName])\n\n  return profile.displayName ? (\n    <>\n      {loading ? <Loading src={user.photoURL} /> : <Loading.ReleaseBody />}\n\n      <Header src=\"joker1\">\n        <Header.Inner>\n          <Header.Logo\n            src={\"/images/icons/logo.svg\"}\n            alt=\"Nerflix\"\n            to={ROUTES.HOME}\n          />\n          <Header.TextLink>Films</Header.TextLink>\n          <Header.TextLink>Series</Header.TextLink>\n        </Header.Inner>\n\n        <Header.Feature>\n          <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n          <Header.Text>\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks\n            connection as he walks the streets of Gotham City. Arthur wears two\n            masks -- the one he paints for his day job as a clown, and the guise\n            he projects in a futile attemp to feel like he's part of the world\n            around him.\n          </Header.Text>\n        </Header.Feature>\n      </Header>\n      <div>Slides are going here</div>\n    </>\n  ) : (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}