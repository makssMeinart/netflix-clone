[{"/home/makss99/Desktop/react/practice/netflix-clone/src/index.js":"1","/home/makss99/Desktop/react/practice/netflix-clone/src/App.js":"2","/home/makss99/Desktop/react/practice/netflix-clone/src/components/jumbotron/index.js":"3","/home/makss99/Desktop/react/practice/netflix-clone/src/components/jumbotron/styles/jumbotron.js":"4","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/jumbotron.js":"5","/home/makss99/Desktop/react/practice/netflix-clone/src/components/index.js":"6","/home/makss99/Desktop/react/practice/netflix-clone/src/components/footer/index.js":"7","/home/makss99/Desktop/react/practice/netflix-clone/src/components/footer/styles/footer.js":"8","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/footer.js":"9","/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/index.js":"10","/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/styles/accordion.js":"11","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/accordion.js":"12","/home/makss99/Desktop/react/practice/netflix-clone/src/components/opt-form/index.js":"13","/home/makss99/Desktop/react/practice/netflix-clone/src/components/opt-form/styles/opt-form.js":"14","/home/makss99/Desktop/react/practice/netflix-clone/src/constants/routes.js":"15","/home/makss99/Desktop/react/practice/netflix-clone/src/pages/home.js":"16","/home/makss99/Desktop/react/practice/netflix-clone/src/pages/index.js":"17","/home/makss99/Desktop/react/practice/netflix-clone/src/pages/browse.js":"18","/home/makss99/Desktop/react/practice/netflix-clone/src/pages/signin.js":"19","/home/makss99/Desktop/react/practice/netflix-clone/src/pages/signup.js":"20","/home/makss99/Desktop/react/practice/netflix-clone/src/components/header/index.js":"21","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/header.js":"22","/home/makss99/Desktop/react/practice/netflix-clone/src/components/header/styles/header.js":"23","/home/makss99/Desktop/react/practice/netflix-clone/src/components/feature/index.js":"24","/home/makss99/Desktop/react/practice/netflix-clone/src/components/feature/styles/feature.js":"25","/home/makss99/Desktop/react/practice/netflix-clone/src/lib/firebase.prod.js":"26","/home/makss99/Desktop/react/practice/netflix-clone/src/seed.js":"27","/home/makss99/Desktop/react/practice/netflix-clone/src/context/firebase.js":"28","/home/makss99/Desktop/react/practice/netflix-clone/src/components/signinForm/index.js":"29","/home/makss99/Desktop/react/practice/netflix-clone/src/components/signinForm/styles/form.js":"30","/home/makss99/Desktop/react/practice/netflix-clone/src/components/miniFooter/index.js":"31","/home/makss99/Desktop/react/practice/netflix-clone/src/components/miniFooter/styles/miniFooter.js":"32","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/miniFooter.js":"33","/home/makss99/Desktop/react/practice/netflix-clone/src/helpers/routes.js":"34","/home/makss99/Desktop/react/practice/netflix-clone/src/hooks/index.js":"35","/home/makss99/Desktop/react/practice/netflix-clone/src/hooks/use-auth-listener.js":"36","/home/makss99/Desktop/react/practice/netflix-clone/src/hooks/use-content.js":"37","/home/makss99/Desktop/react/practice/netflix-clone/src/utils/browse-filter.js":"38","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js":"39","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/profiles.js":"40","/home/makss99/Desktop/react/practice/netflix-clone/src/components/profile/index.js":"41","/home/makss99/Desktop/react/practice/netflix-clone/src/components/profile/styles/profile.js":"42","/home/makss99/Desktop/react/practice/netflix-clone/src/components/loading/index.js":"43","/home/makss99/Desktop/react/practice/netflix-clone/src/components/loading/styles/loading.js":"44","/home/makss99/Desktop/react/practice/netflix-clone/src/components/card/index.js":"45","/home/makss99/Desktop/react/practice/netflix-clone/src/components/card/styles/card.js":"46","/home/makss99/Desktop/react/practice/netflix-clone/src/components/player/index.js":"47","/home/makss99/Desktop/react/practice/netflix-clone/src/components/player/styles/player.js":"48"},{"size":435,"mtime":1622406086995,"results":"49","hashOfConfig":"50"},{"size":1061,"mtime":1622467576986,"results":"51","hashOfConfig":"50"},{"size":992,"mtime":1619691467331,"results":"52","hashOfConfig":"50"},{"size":1396,"mtime":1619941095358,"results":"53","hashOfConfig":"50"},{"size":642,"mtime":1619710306194,"results":"54","hashOfConfig":"50"},{"size":542,"mtime":1620628527237,"results":"55","hashOfConfig":"50"},{"size":927,"mtime":1619718813490,"results":"56","hashOfConfig":"50"},{"size":995,"mtime":1620626269687,"results":"57","hashOfConfig":"50"},{"size":1441,"mtime":1619718722917,"results":"58","hashOfConfig":"50"},{"size":2665,"mtime":1619856584820,"results":"59","hashOfConfig":"50"},{"size":2231,"mtime":1619856776378,"results":"60","hashOfConfig":"50"},{"size":1499,"mtime":1619889017258,"results":"61","hashOfConfig":"50"},{"size":3030,"mtime":1622469800897,"results":"62","hashOfConfig":"50"},{"size":1992,"mtime":1620116136687,"results":"63","hashOfConfig":"50"},{"size":121,"mtime":1619875664651,"results":"64","hashOfConfig":"50"},{"size":1718,"mtime":1620040310115,"results":"65","hashOfConfig":"50"},{"size":167,"mtime":1619874045319,"results":"66","hashOfConfig":"50"},{"size":536,"mtime":1620318358529,"results":"67","hashOfConfig":"50"},{"size":3608,"mtime":1620129461662,"results":"68","hashOfConfig":"50"},{"size":4229,"mtime":1620371499548,"results":"69","hashOfConfig":"50"},{"size":2934,"mtime":1622470012763,"results":"70","hashOfConfig":"50"},{"size":583,"mtime":1622469957659,"results":"71","hashOfConfig":"50"},{"size":4779,"mtime":1622469725572,"results":"72","hashOfConfig":"50"},{"size":396,"mtime":1619942829573,"results":"73","hashOfConfig":"50"},{"size":960,"mtime":1619955193654,"results":"74","hashOfConfig":"50"},{"size":544,"mtime":1619976365985,"results":"75","hashOfConfig":"50"},{"size":18915,"mtime":1619975239024,"results":"76","hashOfConfig":"50"},{"size":90,"mtime":1619987605111,"results":"77","hashOfConfig":"50"},{"size":1983,"mtime":1620055680523,"results":"78","hashOfConfig":"50"},{"size":2769,"mtime":1620118678061,"results":"79","hashOfConfig":"50"},{"size":765,"mtime":1620111197649,"results":"80","hashOfConfig":"50"},{"size":1038,"mtime":1620113647102,"results":"81","hashOfConfig":"50"},{"size":1133,"mtime":1620111196973,"results":"82","hashOfConfig":"50"},{"size":1208,"mtime":1620192022557,"results":"83","hashOfConfig":"50"},{"size":125,"mtime":1620291354267,"results":"84","hashOfConfig":"50"},{"size":794,"mtime":1620289143875,"results":"85","hashOfConfig":"50"},{"size":651,"mtime":1620292759119,"results":"86","hashOfConfig":"50"},{"size":1173,"mtime":1620562382539,"results":"87","hashOfConfig":"50"},{"size":4985,"mtime":1622469566811,"results":"88","hashOfConfig":"50"},{"size":872,"mtime":1622648636653,"results":"89","hashOfConfig":"50"},{"size":856,"mtime":1622470600450,"results":"90","hashOfConfig":"50"},{"size":944,"mtime":1620375641825,"results":"91","hashOfConfig":"50"},{"size":338,"mtime":1622470728664,"results":"92","hashOfConfig":"50"},{"size":1079,"mtime":1622470725360,"results":"93","hashOfConfig":"50"},{"size":3654,"mtime":1622656703441,"results":"94","hashOfConfig":"50"},{"size":3328,"mtime":1622470535997,"results":"95","hashOfConfig":"50"},{"size":1211,"mtime":1620804340610,"results":"96","hashOfConfig":"50"},{"size":792,"mtime":1620805587748,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"b3zti7",{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"101"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"101"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"101"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"101"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"101"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"101"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"101"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"101"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"/home/makss99/Desktop/react/practice/netflix-clone/src/index.js",["210"],"import React, { useContext } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"normalize.css\"\nimport \"./app.css\"\nimport { firebase } from \"./lib/firebase.prod\"\nimport { FirebaseContext } from \"./context/firebase\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={{firebase}}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n",["211","212"],"/home/makss99/Desktop/react/practice/netflix-clone/src/App.js",["213","214","215"],"import { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport { Browse, Home, Signin, Signup } from \"./pages\"\nimport * as ROUTES from \"./constants/routes\"\nimport { createContext, useContext } from \"react\"\nimport { IsUserRedirect, ProtectedRoute } from \"./helpers/routes\"\nimport { useAuthListener } from \"./hooks\"\n\nexport default function App() {\n  const { user } = useAuthListener()\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <IsUserRedirect\n        user={user}\n        loggedInPath={ROUTES.BROWSE}\n        path={ROUTES.HOME}\n        exact\n      >\n        <Home />\n      </IsUserRedirect>\n      <IsUserRedirect\n        user={user}\n        loggedInPath={ROUTES.BROWSE}\n        path={ROUTES.SIGN_IN}\n      >\n        <Signin />\n      </IsUserRedirect>\n      <IsUserRedirect\n        user={user}\n        loggedInPath={ROUTES.BROWSE}\n        path={ROUTES.SIGN_UP}\n      >\n        <Signup />\n      </IsUserRedirect>\n      <ProtectedRoute user={user} path={ROUTES.BROWSE}>\n        <Browse />\n      </ProtectedRoute>\n    </Router>\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/components/jumbotron/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/jumbotron/styles/jumbotron.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/jumbotron.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/footer/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/footer/styles/footer.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/footer.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/index.js",["216"],"import { createContext, useContext, useState } from \"react\"\nimport {\n  Container,\n  Inner,\n  Header,\n  Frame,\n  Item,\n  Top,\n  Title,\n  Dropdown,\n  Body,\n  Button,\n} from \"./styles/accordion\"\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container>\n      <Inner>{children}</Inner>\n    </Container>\n  )\n}\n\nconst ToggleContext = createContext()\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  return <Header {...restProps}>{children}</Header>\n}\n\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>\n}\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  // useState will be responsible for dropdown and button icon change, But we need to open it and close it only\n  // When we click on the Top part not the dropdown, So we gotta pass the useState to the Top\n  const [toggleShow, setToggleShow] = useState(false)\n\n  return (\n    <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\n      <Item {...restProps}>{children}</Item>\n    </ToggleContext.Provider>\n  )\n}\n\nAccordion.Top = function AccordionTop({ children, ...restProps }) {\n  // Thats where we get our useState through the context and might as well\n  // destructure it\n  const { toggleShow, setToggleShow } = useContext(ToggleContext)\n\n  return (\n    <Top\n      onClick={() => setToggleShow((toggleShow) => !toggleShow)}\n      {...restProps}\n    >\n      {children}\n    </Top>\n  )\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>\n}\n\nAccordion.Dropdown = function AccordionDropdown({ children, ...restProps }) {\n  const { toggleShow } = useContext(ToggleContext)\n  // In here I could check state ? true then display dropdown : don't\n  // But then you won't have that nice sliding down animation so I would rather\n  // Add the class based on the state and do the animation in css\n\n  const dropdown_unactive = {\n    maxHeight: \"0\",\n    overflowY: \"hidden\",\n  }\n  const dropdown_active = {\n    maxHeight: \"500px\",\n  }\n  return (\n    <Dropdown\n      style={toggleShow ? dropdown_active : dropdown_unactive}\n      {...restProps}\n    >\n      {children}\n    </Dropdown>\n  )\n}\n\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\n  return <Body {...restProps}>{children}</Body>\n}\n\nAccordion.Button = function AccordionButton({ children, ...restProps}) {\n  const {toggleShow} = useContext(ToggleContext)\n\n  const button_active = {\n    transform: \"rotate(45deg)\"\n  }\n\n  return <Button style={toggleShow ? button_active : null} {...restProps} >{children}</Button>\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/components/accordion/styles/accordion.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/accordion.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/opt-form/index.js",["217","218","219","220","221","222","223","224","225","226","227"],"import { createContext, useContext, useState } from \"react\"\n\nimport {\n  Inner,\n  Title,\n  Wrapper,\n  InputInner,\n  Input,\n  Label,\n  WarningInner,\n  Warning,\n  Button,\n  InputWrapper,\n} from \"./styles/opt-form\"\n\n// This is to get the value of input lengh to the Label\nconst ToggleContext = createContext()\n\nexport default function OptForm({ children, ...restProps }) {\n  return <Inner>{children}</Inner>\n}\n\nOptForm.Title = function OptFormTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>\n}\n\nOptForm.Wrapper = function OptFormWrapper({ children, ...restProps }) {\n  return <Wrapper {...restProps}>{children}</Wrapper>\n}\n\nOptForm.InputWrapper = function OptFormInputWrapper({\n  children,\n  ...restProps\n}) {\n  // Set the useState to count input.value.length\n  const [valueCount, setValueCount] = useState(0)\n\n  return (\n    <ToggleContext.Provider value={{ valueCount, setValueCount }}>\n      <InputWrapper {...restProps}> {children} </InputWrapper>\n    </ToggleContext.Provider>\n  )\n}\n\nOptForm.InputInner = function OptFormInputInner({children, ...restProps}) {\n  return <InputInner {...restProps} >{children}</InputInner>\n}\n\nOptForm.Input = function OptFormInput({ ...restProps }) {\n  const { setValueCount } = useContext(ToggleContext)\n\n  // On change of an input putting the length in useState\n  return (\n    <Input onChange={(e) => setValueCount(e.target.value)} {...restProps} />\n  )\n}\n\nOptForm.Label = function OptFormLabel({ children, ...restProps }) {\n  // Getting the value.length\n  const { valueCount } = useContext(ToggleContext)\n\n  const label_active = {\n    color: \"gray\",\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    top: \"25%\",\n  }\n\n  // Gonna check if the value of the count is > 0 we wanna keep the label at the top\n  // So when you click of it it dosen't drop back on your text\n  return (\n    <Label style={valueCount.length > 0 ? label_active : null} {...restProps}>\n      {children}\n    </Label>\n  )\n}\n\nOptForm.WarningInner = function OptFormWarningInner({children, ...restProps}) {\n  return <WarningInner {...restProps} >{children}</WarningInner>\n}\n\nOptForm.Warning = function OptFormWarning({ children, ...restProps }) {\n  // Here we need to check if the email is typed in and if its correct form and shape\n  const {valueCount} = useContext(ToggleContext)\n\n  // This is just to check if the email is valid\n  const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  return <Warning {...restProps}>\n    {/* Here we want to check if the email is entered at least 5 characters  */}\n    {valueCount.length < 5 ? <p>Email is required!</p> : null}\n    {/*  */}\n    {valueCount.length >= 5 && !re.test(String(valueCount).toLowerCase()) ? <p>Please enter a valid email address</p> : null}\n  </Warning>\n}\n\nOptForm.Button = function OptFormButton({ children, ...restProps }) {\n  return (\n    <Button {...restProps}>\n      {children} <img src=\"images/icons/chevron-right.png\" />\n    </Button>\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/components/opt-form/styles/opt-form.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/constants/routes.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/pages/home.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/pages/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/pages/browse.js",["228"],"import { BrowseContainer } from \"../containers/browse\"\nimport { SelectProfileContainer } from \"../containers/profiles\"\nimport { useContent } from \"../hooks\"\nimport { default as browseFilter } from \"../utils/browse-filter\"\n\nexport default function Browse() {\n\n  // Need the films and series\n  const { series } = useContent(\"series\")\n  const { films } = useContent(\"films\")\n  // Need slides maybe libary be easier\n  const slides = browseFilter({ series, films })\n\n  return (\n    <>\n      <BrowseContainer slides={slides} />\n    </>\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/pages/signin.js",["229"],"import { useState, useContext } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { FirebaseContext } from \"../context/firebase\"\nimport * as ROUTES from \"../constants/routes\"\nimport { MiniFooterContainer } from \"../containers/miniFooter\"\nimport { HeaderContainer } from \"../containers/header\"\nimport { FooterContainer } from \"../containers/footer\"\nimport { Form } from \"../components\"\n\nexport default function Signin() {\n  const history = useHistory()\n  // useContext\n  const { firebase } = useContext(FirebaseContext)\n  // useStates\n  const [showPassword, setShowPassword] = useState(true)\n  const [emailAddress, setEmailAddress] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [error, setError] = useState(\"\")\n\n  // Button Disability\n  const isInvalid = password === \"\" || emailAddress === \"\"\n\n  // Inline Styles\n  const label_active = {\n    top: \"7px\",\n    fontSize: \"0.6875rem\",\n  }\n  const input_active = {\n    borderBottom: \"3px solid #e87c03\",\n  }\n\n  // SignIn Logic\n  const handleSignIn = (e) => {\n    e.preventDefault()\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(emailAddress, password)\n      .then(() => {\n        // Get us to browse page\n        history.push(ROUTES.BROWSE)\n      })\n      .catch((error) => {\n        setEmailAddress(\"\")\n        setPassword(\"\")\n        setError(error.message)\n      })\n  }\n\n  return (\n    <>\n      <HeaderContainer>\n        <Form.Frame onSubmit={handleSignIn} method=\"POST\" >\n          <Form.Inner>\n            <Form.Title>Sign In</Form.Title>\n            {error && <Form.Error>{error}</Form.Error>}\n\n            {/* EMAIL INPUT FIELD */}\n            <Form.InputFrame>\n              <Form.Input\n                onChange={(e) => setEmailAddress(e.target.value)}\n                value={emailAddress}\n                style={emailAddress.length > 0 ? input_active : null}\n              />\n              <Form.Label style={emailAddress.length > 0 ? label_active : null}>\n                Email or phone number\n              </Form.Label>\n            </Form.InputFrame>\n\n            {/* PASSWORD INPUT FIELD */}\n            <Form.InputFrame type=\"password\">\n              <Form.Input\n                onChange={(e) => setPassword(e.target.value)}\n                type={showPassword ? \"password\" : \"word\"}\n                value={password}\n                style={password.length > 0 ? input_active : null}\n              />\n\n              <Form.Label style={password.length > 0 ? label_active : null}>\n                Password\n              </Form.Label>\n              <Form.ShowButton\n                type=\"button\"\n                onClick={() => setShowPassword((showPassword) => !showPassword)}\n              >\n                Show\n              </Form.ShowButton>\n            </Form.InputFrame>\n\n            {/* SUBMIT BUTTON */}\n            <Form.Button\n              onClick={handleSignIn}\n              disabled={isInvalid}\n              type=\"submit\"\n            >\n              Sign In\n            </Form.Button>\n\n            {/* SIGNUP BUTTON */}\n            <Form.SignupContainer>\n              <Form.Text>New to Netflix?</Form.Text>\n              <Form.SignupButton to={ROUTES.SIGN_UP}>\n                Sign up now.\n              </Form.SignupButton>\n            </Form.SignupContainer>\n\n            <Form.SmallText>\n              This page is protected by Google reCAPTCHA to ensure you're not a\n              bot. Learn more.\n            </Form.SmallText>\n          </Form.Inner>\n        </Form.Frame>\n\n        <div>\n          <MiniFooterContainer />\n        </div>\n      </HeaderContainer>\n    </>\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/pages/signup.js",["230","231"],"import { useState, useContext } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { FirebaseContext } from \"../context/firebase\"\nimport * as ROUTES from \"../constants/routes\"\nimport { MiniFooterContainer } from \"../containers/miniFooter\"\nimport { HeaderContainer } from \"../containers/header\"\nimport { FooterContainer } from \"../containers/footer\"\nimport { Form } from \"../components\"\n\nexport default function Signup() {\n  // custom Hooks\n  const history = useHistory()\n  // useContext\n  const { firebase } = useContext(FirebaseContext)\n\n  // useState\n  const [showPassword, setShowPassword] = useState(true)\n\n  const [firstName, setFirstName] = useState(\"\")\n  const [emailAddress, setEmailAddress] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [error, setError] = useState(\"\")\n\n  // Inline Styles\n  const label_active = {\n    top: \"7px\",\n    fontSize: \"0.6875rem\",\n  }\n  const input_active = {\n    borderBottom: \"3px solid #e87c03\",\n  }\n\n  const isInvalid = firstName === \"\" || password === \"\" || emailAddress === \"\"\n\n  const handleSignUp = (e) => {\n    e.preventDefault()\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(emailAddress, password)\n      .then((result) => {\n        result.user.updateProfile({\n          displayName: firstName,\n          photoURL: Math.floor(Math.random() * 5) + 1\n        })\n      })\n      .catch(error => {\n        setFirstName(\"\")\n        setEmailAddress(\"\")\n        setPassword(\"\")\n        setError(error.message)\n      }) \n  }\n\n  return (\n    <>\n      <HeaderContainer>\n        <Form.Frame onSubmit={handleSignUp} method=\"POST\">\n          <Form.Inner>\n            <Form.Title>Sign In</Form.Title>\n            {error && <Form.Error>{error}</Form.Error>}\n\n             {/* NAME INPUT FIELD */}\n             <Form.InputFrame type=\"word\">\n              <Form.Input\n                onChange={(e) => setFirstName(e.target.value)}\n                value={firstName}\n                style={firstName.length > 0 ? input_active : null}\n              />\n              <Form.Label style={firstName.length > 0 ? label_active : null}>\n                First Name\n              </Form.Label>\n            </Form.InputFrame>\n\n            {/* EMAIL INPUT FIELD */}\n            <Form.InputFrame type=\"email\">\n              <Form.Input\n                onChange={(e) => setEmailAddress(e.target.value)}\n                value={emailAddress}\n                style={emailAddress.length > 0 ? input_active : null}\n              />\n              <Form.Label style={emailAddress.length > 0 ? label_active : null}>\n                Email or phone number\n              </Form.Label>\n            </Form.InputFrame>\n\n            {/* PASSWORD INPUT FIELD */}\n            <Form.InputFrame type=\"password\">\n              <Form.Input\n                onChange={(e) => setPassword(e.target.value)}\n                type={showPassword ? \"password\" : \"word\"}\n                value={password}\n                style={password.length > 0 ? input_active : null}\n              />\n\n              <Form.Label style={password.length > 0 ? label_active : null}>\n                Password\n              </Form.Label>\n              <Form.ShowButton\n                type=\"button\"\n                onClick={() => setShowPassword((showPassword) => !showPassword)}\n              >\n                Show\n              </Form.ShowButton>\n            </Form.InputFrame>\n\n            {/* SUBMIT BUTTON */}\n            <Form.Button\n              onClick={handleSignUp}\n              disabled={isInvalid}\n              type=\"submit\"\n            >\n              Sign In\n            </Form.Button>\n\n            {/* SIGNUP BUTTON */}\n            <Form.SignupContainer>\n              <Form.Text>Already have an account?</Form.Text>\n              <Form.SignupButton to={ROUTES.SIGN_IN}>\n                Sign in now.\n              </Form.SignupButton>\n            </Form.SignupContainer>\n\n            <Form.SmallText>\n              This page is protected by Google reCAPTCHA to ensure you're not a\n              bot. Learn more.\n            </Form.SmallText>\n          </Form.Inner>\n        </Form.Frame>\n\n        <div>\n          <MiniFooterContainer />\n        </div>\n      </HeaderContainer>\n    </>\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/components/header/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/header.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/header/styles/header.js",["232"],"import styled from \"styled-components/macro\"\nimport { Link, Link as ReactRouterLink } from \"react-router-dom\"\n\nexport const Background = styled.div`\n  display: flex;\n  height: fit-content;\n  flex-direction: column;\n  background: url(${({ src }) =>\n    src ? `images/misc/${src}.jpg` : `images/misc/home-bg.jpg`});\n  background-size: cover;\n  background-position: center center center center;\n  background-repeat: no-repeat;\n  backdrop-filter: contrast(1)\n  position: relative;\n  \n  @media screen and (max-width: 1100px) {\n    ${({ backgroundRemoveOnSmallVP }) =>\n      backgroundRemoveOnSmallVP && \"background: none\"}\n  }\n\n  @media screen and (max-width: 760px) {\n    min-height: 600px;\n    ${({ backgroundRemoveOnSmallVP }) => \n      backgroundRemoveOnSmallVP && \"min-height: fit-content\"}\n  }\n\n  @media screen and (max-width: 500px) {\n    min-height: fit-content;\n  }\n`\n\nexport const Search = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    color: white;\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 700px) {\n    display: none;\n  }\n`\n\nexport const SearchIcon = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n\n  img {\n    filter: brightness(0) invert(1);\n    width: 1rem;\n  }\n`\n\nexport const SearchInput = styled.input`\n  background-color: #44444459;\n  color: white;\n  height: 30px;\n  font-size: 0.875rem;\n  border: 1px solid white;\n  transition: width .5s;\n  margin-left: ${({active}) => (active === true ? \"10px\" : \"0\")};\n  opacity: ${({active}) => (active === true ? \"1\" : \"0\")};\n  width: ${({active}) => (active === true ? \"200px\" : \"0\")};\n  padding: ${({active}) => (active === true ? \"0 10px\" : \"0\")};\n`\n\nexport const PlayButton = styled.div`\n  padding: 10px 20px;\n  color: #000;\n  background: #e6e6e6;\n  box-shadow: 0 .6vw 1vw -0 -.4vw rgba(0,0,0, .35);\n  max-width: 130px;\n  font-weight: bold;\n  cursor: pointer;\n  font-size: 1.25rem;\n  border-radius: 5px;\n\n\n  :hover {\n    background-color: #ff1e1e;\n    color: white;\n  }\n`\n\nexport const Content = styled.div`\n  padding: 5rem 0;\n\n  @media screen and (max-width: 900px) {\n    padding: 4rem 0;\n  }\n\n  @media screen and (max-width: 760px) {\n    padding: 3rem 0;\n  }\n\n  @media screen and (max-width: 400px) {\n    padding: 0;\n  }\n`\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  padding: 75px 0; \n  max-width: 950px;\n  margin: 0 auto;\n  text-align: center;\n\n  @media screen and (max-width: 950px) {\n    max-width: 85%;\n  }\n\n  @media screen and (max-width: 400px) {\n    padding-top: 40px;\n  }\n`\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem 0;\n  padding: 0 3.5rem;\n  z-index: 10;\n\n  @media screen and (max-width: 760px) {\n    padding: 0 2rem;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 0 1rem;\n  }\n`\n\nexport const Group = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: left;\n  \n`\n\nexport const Logo = styled.img`\n  width: 133px;\n\n  @media screen and (max-width: 500px) {\n    width: 90px;\n  }\n`\nexport const Dropdown = styled.div`\n  display: none;\n  background-color: #000;\n  position: absolute;\n  padding: 0.625rem;\n  width: fit-content;\n  top: 32px;\n  right: 10px;\n`\n\nexport const Picture = styled.button`\n  background: url(${({ src }) => src});\n  background-position: center;\n  background-size: contain;&:nth-child(1) {\n    margin-left: 0;\n  }\n  cursor: pointer;\n  border: none;\n  width: 32px;\n  height: 32px;\n`\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  position: relative;\n\n  button {\n    cursor: pointer;\n  }\n\n  :hover > ${Dropdown} {\n    display: flex;\n    flex-direction: column;\n  }\n`\n\nexport const ButtonLink = styled(ReactRouterLink)`\n  font-size: 1.1rem;\n  padding: 0.5rem 1.1rem;\n  background-color: #e50914;\n  color: white;\n  border: none;\n  border-radius: 3px;\n  text-decoration: none;\n  line-height: 1.2;\n\n  :hover {\n    background-color: #f40612;\n    background-size: contain;\n  }\n`\nexport const Feature = styled(Container)`\n  padding: 150px 0 400px 0;\n  flex-direction: column;\n  text-align: left;\n  width: 50%;\n  margin-left: 3rem;\n\n  @media (max-width: 1100px) {\n    display: none;\n  }\n`\n\nexport const Text = styled.p`\n  color: white;\n  font-size: 1.375rem;\n  line-height: normal;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.45);\n`\n\nexport const TextLink = styled.p`\n  color: white;\n  text-decoration: none;\n  font-weight: ${({ active }) => (active === true ? \"700\" : \"400\")};\n  cursor: pointer;\n  margin: 0 0 0 20px;\n\n  &:hover {\n    font-weight: bold;\n  }\n\n  &:nth-child(1) {\n    margin-left: 0;\n  }\n`\n\nexport const FeatureCallOut = styled.h2`\n  color: white;\n  font-size: 3.125rem;\n  line-height: 1;\n  font-weight: bold;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.45);\n  margin: 0;\n`\n","/home/makss99/Desktop/react/practice/netflix-clone/src/components/feature/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/feature/styles/feature.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/lib/firebase.prod.js",["233"],"import Firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\nimport { seedDatabase } from \"../seed\"\n\n// We need to seed the database\n\nconst config = {\n  apiKey: \"AIzaSyCAmxXCI35cE6AiZzQ_P3wmDp8_O8S9HD8\",\n  authDomain: \"netflix-firebase-408dd.firebaseapp.com\",\n  projectId: \"netflix-firebase-408dd\",\n  storageBucket: \"netflix-firebase-408dd.appspot.com\",\n  messagingSenderId: \"183487477636\",\n  appId: \"1:183487477636:web:68562b683b3d89a259cfd1\",\n}\n\n\nconst firebase = Firebase.initializeApp(config)\nexport { firebase }\n\n","/home/makss99/Desktop/react/practice/netflix-clone/src/seed.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/context/firebase.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/signinForm/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/signinForm/styles/form.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/miniFooter/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/miniFooter/styles/miniFooter.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/miniFooter.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/helpers/routes.js",["234"],"import { Route, Redirect } from \"react-router-dom\"\nimport { BROWSE, SIGN_IN } from \"../constants/routes\"\n\n// check if the user is logged in when going on the singin & sign up page if he is not then allow them to go on it else redirect to browse page\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (!user) {\n          return children\n        }\n\n        if (user) {\n          return (\n            <Redirect\n              to={{\n                pathname: loggedInPath,\n              }}\n            />\n          )\n        }\n      }}\n      return\n      null\n    />\n  )\n}\n\n// If they not logged in and trying to access the browse page redirect them to the signin page\nexport function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (user) {\n          return children\n        }\n\n        if (!user) {\n          return (\n            <Redirect\n              to={{\n                pathname: SIGN_IN,\n                state: { from: location },\n              }}\n            />\n          )\n        }\n        return null\n      }}\n    />\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/hooks/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/hooks/use-auth-listener.js",["235","236"],"import { useState, useEffect, useContex, useContext} from \"react\"\nimport { FirebaseContext } from \"../context/firebase\"\n\nexport default function useAuthListener() {\n  // userState should pull up the authUser from localStorage\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"authUser\")))\n\n  const { firebase } = useContext(FirebaseContext) \n\n  useEffect(() => {\n    const listener = \n      firebase\n      .auth()\n      .onAuthStateChanged(authUser => {\n        if(authUser) {\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser))\n          setUser(authUser)\n        }\n        else {\n          localStorage.removeItem(\"authUser\")\n          setUser(null)\n        }\n      })\n\n      // clean the listener\n      return () => listener()\n  }, [])\n\n  return { user }\n}","/home/makss99/Desktop/react/practice/netflix-clone/src/hooks/use-content.js",["237"],"import { useEffect, useState, useContext } from \"react\"\nimport { FirebaseContext } from \"../context/firebase\"\n\nexport default function useContent(target) {\n  const [content, setContent] = useState([])\n  const { firebase } = useContext(FirebaseContext)\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(target)\n      .get()\n      .then(resp => {\n        const allContent = resp.docs.map(contentObj => ({\n          ...contentObj.data(),\n          docId: contentObj.id\n        }))\n\n        setContent(allContent)\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }, [])\n\n  return { [target]: content}\n}","/home/makss99/Desktop/react/practice/netflix-clone/src/utils/browse-filter.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/containers/browse.js",["238"],"import { SelectProfileContainer } from \"./profiles\"\nimport { FirebaseContext } from \"../context/firebase\"\nimport { useContext, useEffect, useState } from \"react\"\nimport { Header, Loading, Card, Player } from \"../components\"\nimport { FooterContainer } from \"../containers/footer\"\nimport Fuse from \"fuse.js\"\nimport * as ROUTES from \"../constants/routes\"\n\nexport function BrowseContainer({ slides }) {\n  // The switch between series and films\n  const [category, setCategory] = useState(\"films\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  // Here we find thje\n  const [profile, setProfile] = useState({})\n  // This is to get rid of the loading after its finished\n  const [loading, setLoading] = useState(true)\n  const [slideRows, setSlideRows] = useState([])\n\n  const { firebase } = useContext(FirebaseContext)\n  const user = firebase.auth().currentUser || {}\n\n  // After the profile has been picked we want to remove the loading after 3 seconds\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 3000)\n  }, [profile.displayName])\n\n\n  useEffect(() => {\n    setSlideRows(slides[category])\n  }, [slides, category])\n\n  useEffect(() => {\n    const fuse = new Fuse(slideRows, {\n      keys: [\"data.description\", \"data.title\", \"data.genre\"],\n    })\n    const result = fuse.search(searchTerm).map(({ item }) => item)\n\n    if(slideRows.length > 0 && searchTerm.length > 3 && result.length > 0) {\n      setSlideRows(result)\n    }\n    else {\n      setSlideRows(slides[category])\n    }\n  }, [searchTerm])\n\n  return profile.displayName ? (\n    <>\n      {loading ? <Loading src={user.photoURL} /> : <Loading.ReleaseBody />}\n\n      <Header src=\"joker1\" backgroundRemoveOnSmallVP>\n        <Header.Inner>\n          <Header.Group>\n            <Header.Logo\n              src={\"images/icons/logo.svg\"}\n              alt=\"Nerflix\"\n              to={ROUTES.HOME}\n            />\n            <Header.TextLink\n              active={category === \"films\" ? true : false}\n              onClick={() => setCategory(\"films\")}\n            >\n              Films\n            </Header.TextLink>\n            <Header.TextLink\n              active={category === \"series\" ? true : false}\n              onClick={() => setCategory(\"series\")}\n            >\n              Series\n            </Header.TextLink>\n          </Header.Group>\n          <Header.Group>\n            <Header.Group>\n              <Header.Search\n                searchTerm={searchTerm}\n                setSearchTerm={setSearchTerm}\n              >\n                Header Search\n              </Header.Search>\n            </Header.Group>\n            <Header.Profile>\n              <Header.Picture src={user.photoURL} />\n              <Header.Dropdown>\n                <Header.Group>\n                  <Header.Picture src={user.photoURL} />\n                  <Header.TextLink>{user.displayName}</Header.TextLink>\n                </Header.Group>\n                <Header.Group>\n                  <Header.TextLink onClick={() => firebase.auth().signOut()}>\n                    Sign Out\n                  </Header.TextLink>\n                </Header.Group>\n              </Header.Dropdown>\n            </Header.Profile>\n          </Header.Group>\n        </Header.Inner>\n\n        <Header.Feature>\n          <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n          <Header.Text>\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks\n            connection as he walks the streets of Gotham City. Arthur wears two\n            masks -- the one he paints for his day job as a clown, and the guise\n            he projects in a futile attemp to feel like he's part of the world\n            around him.\n          </Header.Text>\n          <Header.PlayButton>Play</Header.PlayButton>\n        </Header.Feature>\n      </Header>\n\n      <Card.Group>\n        {slideRows.map((slideItem) => (\n          <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\n            <Card.Title>{slideItem.title}</Card.Title>\n            <Card.Entities>\n              {slideItem.data.map((currentSlide) => (\n                <Card.Item key={currentSlide.docId} item={currentSlide}>\n                  <Card.Image\n                    src={`images/${category}/${currentSlide.genre}/${currentSlide.slug}/small.jpg`}\n                  />\n\n                  <Card.Meta>\n                    <Card.SubTitle>{currentSlide.title}</Card.SubTitle>\n                    <Card.Text>{currentSlide.description}</Card.Text>\n                  </Card.Meta>\n                </Card.Item>\n              ))}\n            </Card.Entities>\n            {/* The dropdown */}\n            <Card.Feature category={category}>\n              <Player>\n                <Player.Button />\n                <Player.Video src={`videos/bunny.mp4`} />\n              </Player>\n            </Card.Feature>\n          </Card>\n        ))}\n      </Card.Group>\n\n      <FooterContainer />\n    </>\n  ) : (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/containers/profiles.js",["239"],"import { Header } from \"../components\"\nimport * as ROUTES from \"../constants/routes\"\nimport { Profile } from \"../components\"\nimport useAuthListener from \"../hooks/use-auth-listener\"\n\nexport function SelectProfileContainer({ user, setProfile }) {\n  return (\n    <>\n    <Header bg={null}>\n      <Header.Inner>\n        <Header.Logo\n          src={\"images/icons/logo.svg\"}\n          alt=\"Nerflix\"\n          to={ROUTES.BROWSE}\n        />\n      </Header.Inner>\n    </Header>\n\n    <Profile>\n      <Profile.Title>Who's watching?</Profile.Title>\n      <Profile.List>\n        <Profile.User onClick={() => setProfile({displayName: user.displayName, photoURL: user.photoURL})}>\n          <Profile.Picture src={user.photoURL} alt=\"Profile Picturee\" />\n          <Profile.Name>{user.displayName}</Profile.Name>\n        </Profile.User>\n      </Profile.List>\n    </Profile>\n    </>\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/components/profile/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/profile/styles/profile.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/loading/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/loading/styles/loading.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/card/index.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/card/styles/card.js",[],"/home/makss99/Desktop/react/practice/netflix-clone/src/components/player/index.js",["240","241"],"import { useState, useContext, createContext, React } from \"react\"\nimport ReactDOM from 'react-dom';\nimport { Container, Button, Overlay, Inner, Close } from \"./styles/player\"\n\nexport const PlayerContext = createContext()\n\nexport default function Player({ children, ...restProps }) {\n  const [showPlayer, setShowPlayer] = useState(false)\n\n  return (\n    <PlayerContext.Provider value={{ showPlayer, setShowPlayer }}>\n      <Container {...restProps}>{children}</Container>\n    </PlayerContext.Provider>\n  )\n}\n\nPlayer.Video = function PlayerVideo({ src, ...restProps }) {\n  const { showPlayer, setShowPlayer } = useContext(PlayerContext)\n\n  return showPlayer\n    ? ReactDOM.createPortal(\n        <Overlay onClick={() => setShowPlayer(false)}>\n          <Inner>\n            <video id=\"netflix-player\" src={src} controls>\n              <source src={src} type=\"video/mp4\" />\n            </video>\n          </Inner>\n        </Overlay>,\n        document.body\n      )\n    : null\n}\n\nPlayer.Button = function PlayerButton({ ...restProps }) {\n  const { showPlayer, setShowPlayer } = useContext(PlayerContext)\n\n  return (\n    <Button onClick={() => setShowPlayer(showPlayer => !showPlayer)}>\n      Play\n    </Button>\n  )\n}\n","/home/makss99/Desktop/react/practice/netflix-clone/src/components/player/styles/player.js",[],{"ruleId":"242","severity":1,"message":"243","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":27},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"242","severity":1,"message":"250","line":1,"column":35,"nodeType":"244","messageId":"245","endLine":1,"endColumn":40},{"ruleId":"242","severity":1,"message":"251","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":4,"column":25,"nodeType":"244","messageId":"245","endLine":4,"endColumn":35},{"ruleId":"242","severity":1,"message":"252","line":48,"column":11,"nodeType":"244","messageId":"245","endLine":48,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":87,"column":27,"nodeType":"255","messageId":"256","endLine":87,"endColumn":28,"suggestions":"257"},{"ruleId":"253","severity":1,"message":"258","line":87,"column":35,"nodeType":"255","messageId":"256","endLine":87,"endColumn":36,"suggestions":"259"},{"ruleId":"253","severity":1,"message":"254","line":87,"column":51,"nodeType":"255","messageId":"256","endLine":87,"endColumn":52,"suggestions":"260"},{"ruleId":"253","severity":1,"message":"258","line":87,"column":59,"nodeType":"255","messageId":"256","endLine":87,"endColumn":60,"suggestions":"261"},{"ruleId":"253","severity":1,"message":"258","line":87,"column":68,"nodeType":"255","messageId":"256","endLine":87,"endColumn":69,"suggestions":"262"},{"ruleId":"253","severity":1,"message":"258","line":87,"column":72,"nodeType":"255","messageId":"256","endLine":87,"endColumn":73,"suggestions":"263"},{"ruleId":"253","severity":1,"message":"254","line":87,"column":88,"nodeType":"255","messageId":"256","endLine":87,"endColumn":89,"suggestions":"264"},{"ruleId":"253","severity":1,"message":"258","line":87,"column":96,"nodeType":"255","messageId":"256","endLine":87,"endColumn":97,"suggestions":"265"},{"ruleId":"253","severity":1,"message":"254","line":87,"column":113,"nodeType":"255","messageId":"256","endLine":87,"endColumn":114,"suggestions":"266"},{"ruleId":"253","severity":1,"message":"258","line":87,"column":121,"nodeType":"255","messageId":"256","endLine":87,"endColumn":122,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":100,"column":18,"nodeType":"270","endLine":100,"endColumn":62},{"ruleId":"242","severity":1,"message":"271","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":32},{"ruleId":"242","severity":1,"message":"272","line":7,"column":10,"nodeType":"244","messageId":"245","endLine":7,"endColumn":25},{"ruleId":"242","severity":1,"message":"272","line":7,"column":10,"nodeType":"244","messageId":"245","endLine":7,"endColumn":25},{"ruleId":"242","severity":1,"message":"273","line":12,"column":9,"nodeType":"244","messageId":"245","endLine":12,"endColumn":16},{"ruleId":"242","severity":1,"message":"274","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":14},{"ruleId":"242","severity":1,"message":"275","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":22},{"ruleId":"242","severity":1,"message":"276","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":16},{"ruleId":"242","severity":1,"message":"277","line":1,"column":31,"nodeType":"244","messageId":"245","endLine":1,"endColumn":40},{"ruleId":"278","severity":1,"message":"279","line":27,"column":6,"nodeType":"280","endLine":27,"endColumn":8,"suggestions":"281"},{"ruleId":"278","severity":1,"message":"282","line":24,"column":6,"nodeType":"280","endLine":24,"endColumn":8,"suggestions":"283"},{"ruleId":"278","severity":1,"message":"284","line":46,"column":6,"nodeType":"280","endLine":46,"endColumn":18,"suggestions":"285"},{"ruleId":"242","severity":1,"message":"286","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"287","line":3,"column":45,"nodeType":"244","messageId":"245","endLine":3,"endColumn":50},{"ruleId":"242","severity":1,"message":"288","line":35,"column":11,"nodeType":"244","messageId":"245","endLine":35,"endColumn":21},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["289"],"no-negated-in-lhs",["290"],"'Route' is defined but never used.","'createContext' is defined but never used.","'toggleShow' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["291","292"],"Unnecessary escape character: \\\".",["293","294"],["295","296"],["297","298"],["299","300"],["301","302"],["303","304"],["305","306"],["307","308"],["309","310"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SelectProfileContainer' is defined but never used.","'FooterContainer' is defined but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.","'seedDatabase' is defined but never used.","'BROWSE' is defined but never used.","'useContex' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.","ArrayExpression",["311"],"React Hook useEffect has missing dependencies: 'firebase' and 'target'. Either include them or remove the dependency array.",["312"],"React Hook useEffect has missing dependencies: 'category', 'slideRows', and 'slides'. Either include them or remove the dependency array. If 'setSlideRows' needs the current value of 'slides', you can also switch to useReducer instead of useState and read 'slides' in the reducer.",["313"],"'useAuthListener' is defined but never used.","'Close' is defined but never used.","'showPlayer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"314","fix":"315","desc":"316"},{"messageId":"317","fix":"318","desc":"319"},{"messageId":"314","fix":"320","desc":"316"},{"messageId":"317","fix":"321","desc":"319"},{"messageId":"314","fix":"322","desc":"316"},{"messageId":"317","fix":"323","desc":"319"},{"messageId":"314","fix":"324","desc":"316"},{"messageId":"317","fix":"325","desc":"319"},{"messageId":"314","fix":"326","desc":"316"},{"messageId":"317","fix":"327","desc":"319"},{"messageId":"314","fix":"328","desc":"316"},{"messageId":"317","fix":"329","desc":"319"},{"messageId":"314","fix":"330","desc":"316"},{"messageId":"317","fix":"331","desc":"319"},{"messageId":"314","fix":"332","desc":"316"},{"messageId":"317","fix":"333","desc":"319"},{"messageId":"314","fix":"334","desc":"316"},{"messageId":"317","fix":"335","desc":"319"},{"messageId":"314","fix":"336","desc":"316"},{"messageId":"317","fix":"337","desc":"319"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"removeEscape",{"range":"344","text":"345"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"346","text":"347"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"348","text":"345"},{"range":"349","text":"347"},{"range":"350","text":"345"},{"range":"351","text":"347"},{"range":"352","text":"345"},{"range":"353","text":"347"},{"range":"354","text":"345"},{"range":"355","text":"347"},{"range":"356","text":"345"},{"range":"357","text":"347"},{"range":"358","text":"345"},{"range":"359","text":"347"},{"range":"360","text":"345"},{"range":"361","text":"347"},{"range":"362","text":"345"},{"range":"363","text":"347"},{"range":"364","text":"345"},{"range":"365","text":"347"},"Update the dependencies array to be: [firebase]",{"range":"366","text":"367"},"Update the dependencies array to be: [firebase, target]",{"range":"368","text":"369"},"Update the dependencies array to be: [category, searchTerm, slideRows, slides]",{"range":"370","text":"371"},[2398,2399],"",[2398,2398],"\\",[2406,2407],[2406,2406],[2422,2423],[2422,2422],[2430,2431],[2430,2430],[2439,2440],[2439,2439],[2443,2444],[2443,2443],[2459,2460],[2459,2459],[2467,2468],[2467,2467],[2484,2485],[2484,2484],[2492,2493],[2492,2492],[770,772],"[firebase]",[615,617],"[firebase, target]",[1508,1520],"[category, searchTerm, slideRows, slides]"]